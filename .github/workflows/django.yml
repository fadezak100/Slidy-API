name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      MY_POSTGRES_USER: someuser
      MY_POSTGRES_PASSWORD: somepassword
      MY_POSTGRES_DB: somedbname
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      env:
        DEBUG: "0"
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEFAULT_AVATAR: ${{ secrets.DEFAULT_AVATAR }}
        CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
        CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
        CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        DB_USERNAME: ${{ secrets.POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DB_HOST: ${{ secrets.POSTGRES_HOST }}
        DB_DATABASE: ${{ secrets.POSTGRES_DB }}
        DB_PORT: ${{ secrets.POSTGRES_PORT }}

      run: |
        cd backend
        python manage.py test